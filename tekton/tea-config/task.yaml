apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: tea-config-create
  labels:
    app.kubernetes.io/component: create
spec:
  params:
    - name: name
      type: string

  steps:
    - name: login
      image: alpine

      env:
        - name: GITEA_SERVER_URL
          value: http://gitea-http.gitea.svc:3000

        - name: GITEA_SERVER_USER
          valueFrom:
            secretKeyRef:
              name: gitea-admin-credentials
              key: username

        - name: GITEA_SERVER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gitea-admin-credentials
              key: password

      script: |
        #!/usr/bin/env sh

        set -xe

        apk add --quiet \
          curl \
          jq \
          tea

        GITEA_TOKEN_FILENAME=`mktemp`

        curl "${GITEA_SERVER_URL}/api/v1/users/${GITEA_SERVER_USER}/tokens" \
          --silent --fail \
          --request POST \
          --user "${GITEA_SERVER_USER}:${GITEA_SERVER_PASSWORD}" \
          --header 'Content-Type: application/json' \
          --data '{ "name": "$(params.name)", "scopes": [ "all" ] }' \
          > "${GITEA_TOKEN_FILENAME}"

        GITEA_TOKEN=`jq '.sha1' --raw-output "${GITEA_TOKEN_FILENAME}"`

        tea logins add \
          --name "$(params.name)" \
          --token "${GITEA_TOKEN}"

        tea logins default "$(params.name)"

    - name: create
      image: alpine

      script: |
        #!/usr/bin/env sh

        set -xe

        apk add --quiet \
          curl \
          jq

        KUBECTL_VERSION_FILENAME=`mktemp`

        curl https://kubernetes.default.svc/openapi/v2 \
          --silent --fail \
          --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt \
          --oauth2-bearer "`cat /var/run/secrets/kubernetes.io/serviceaccount/token`" \
          > "${KUBECTL_VERSION_FILENAME}"

        KUBECTL_VERSION=`jq '.info.version | capture("^(?<version>[^+]+)") | .version' --raw-output "${KUBECTL_VERSION_FILENAME}"`

        curl "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl" \
          --silent --fail \
          --location \
          --output /usr/local/bin/kubectl

        chmod +x /usr/local/bin/kubectl

        kubectl create secret generic "tea-config-$(params.name)" \
          --from-file /root/.config/tea/config.yml

  workspaces:
    - name: tea-config
      mountPath: /root/.config/tea
